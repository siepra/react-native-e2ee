import com.android.Version

buildscript {
  ext.kotlin_version = '1.8.22'

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.2"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'kotlin-android'

def _minSdkVersion = ((rootProject?.ext?.properties?.minSdkVersion) ?: 24)

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["E2ee_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["E2ee_" + name]).toInteger()
}

static def supportsNamespace() {
  def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.e2ee"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  packagingOptions {
    pickFirst 'lib/x86/libc++_shared.so'
    pickFirst 'lib/x86_64/libc++_shared.so'
    pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    pickFirst 'lib/arm64-v8a/libc++_shared.so'
    pickFirst 'lib/x86/libfbjni.so'
    pickFirst 'lib/x86_64/libfbjni.so'
    pickFirst 'lib/armeabi-v7a/libfbjni.so'
    pickFirst 'lib/arm64-v8a/libfbjni.so'
  }

  rootProject.ext.ffmpegKitPackage = "video"

  ndkVersion getExtOrDefault("ndkVersion")
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

    externalNativeBuild {
      cmake {
        cppFlags "-O2 -frtti -fexceptions -Wall -fstack-protector-all"
      }
    }

    ndk {
      // noinspection ChromeOsAbiSupport
      abiFilters = ["x86_64", "arm64-v8a"]
    }

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  testOptions {
    unitTests.all {
      useJUnitPlatform()
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

   packagingOptions {
     exclude("META-INF/LICENSE.md")
     exclude("META-INF/LICENSE-notice.md")
   }
}

repositories {
  mavenCentral()
  google()
  maven { url 'https://www.jitpack.io/' }
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'

  androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
  androidTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'

 androidTestImplementation "androidx.test:runner:1.5.0"
//  androidTestImplementation "androidx.test:rules:1.5.0"

  implementation("androidx.core:core-ktx:1.12.0")

  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  // noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-android:0.72.7"
}
